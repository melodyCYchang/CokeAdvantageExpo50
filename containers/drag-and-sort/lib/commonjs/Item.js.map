{"version":3,"sources":["Item.tsx"],"names":["Item","children","positions","id","onDragEnd","scrollView","scrollY","editing","config","ConfigContext","SIZE","COL","getOrder","getPosition","containerHeight","Dimensions","get","height","contentHeight","Object","keys","value","length","isGestureActive","position","translateX","x","translateY","y","newOrder","pos","animationConfig","onGestureEvent","onStart","_","ctx","onActive","translationX","translationY","oldOlder","idToSwap","find","key","newPositions","JSON","parse","stringify","lowerBound","upperBound","maxScroll","leftToScrollDown","diff","Math","min","onEnd","newPosition","style","zIndex","scale","top","left","width","transform","StyleSheet","absoluteFill"],"mappings":"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","sourcesContent":["import React, { ReactNode, RefObject, useContext } from 'react';\nimport { Dimensions, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  withSpring,\n  scrollTo,\n  withTiming,\n  useSharedValue,\n  runOnJS,\n} from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\n\nimport { ConfigContext, animationConfig, Positions } from './ConfigContext';\n\ninterface ItemProps {\n  children: ReactNode;\n  positions: Animated.SharedValue<Positions>;\n  id: string;\n  editing: boolean;\n  onDragEnd: (diffs: Positions) => void;\n  scrollView: RefObject<Animated.ScrollView>;\n  scrollY: Animated.SharedValue<number>;\n}\n\nconst Item = ({\n  children,\n  positions,\n  id,\n  onDragEnd,\n  scrollView,\n  scrollY,\n  editing,\n}: ItemProps) => {\n  const config = useContext(ConfigContext);\n  const { SIZE, COL, getOrder, getPosition } = config;\n  const containerHeight = Dimensions.get('window').height - 40;\n  const contentHeight = (Object.keys(positions.value).length / COL) * SIZE;\n  const isGestureActive = useSharedValue(false);\n\n  const position = getPosition(config, positions.value[id]!);\n  const translateX = useSharedValue(position.x);\n  const translateY = useSharedValue(position.y);\n\n  useAnimatedReaction(\n    () => positions.value[id]!,\n    (newOrder) => {\n      if (!isGestureActive.value) {\n        const pos = getPosition(config, newOrder);\n        translateX.value = withTiming(pos.x, animationConfig);\n        translateY.value = withTiming(pos.y, animationConfig);\n      }\n    }\n  );\n\n  const onGestureEvent = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    { x: number; y: number }\n  >({\n    onStart: (_, ctx) => {\n      // dont allow drag start if we're done editing\n      if (editing) {\n        ctx.x = translateX.value;\n        ctx.y = translateY.value;\n        isGestureActive.value = true;\n      }\n    },\n    onActive: ({ translationX, translationY }, ctx) => {\n      // dont allow drag if we're done editing\n      if (editing) {\n        translateX.value = ctx.x + translationX;\n        translateY.value = ctx.y + translationY;\n        // 1. We calculate where the tile should be\n        const newOrder = getOrder(\n          config,\n          translateX.value,\n          translateY.value,\n          Object.keys(positions.value).length - 1\n        );\n\n        // 2. We swap the positions\n        const oldOlder = positions.value[id];\n        if (newOrder !== oldOlder) {\n          const idToSwap = Object.keys(positions.value).find(\n            (key) => positions.value[key] === newOrder\n          );\n          if (idToSwap) {\n            // Spread operator is not supported in worklets\n            // And Object.assign doesn't seem to be working on alpha.6\n            const newPositions = JSON.parse(JSON.stringify(positions.value));\n            newPositions[id] = newOrder;\n            newPositions[idToSwap] = oldOlder;\n            positions.value = newPositions;\n          }\n        }\n\n        // 3. Scroll up and down if necessary\n        const lowerBound = scrollY.value;\n        const upperBound = lowerBound + containerHeight - SIZE;\n        const maxScroll = contentHeight - containerHeight;\n        const leftToScrollDown = maxScroll - scrollY.value;\n        if (translateY.value < lowerBound) {\n          const diff = Math.min(lowerBound - translateY.value, lowerBound);\n          scrollY.value -= diff;\n          scrollTo(scrollView, 0, scrollY.value, false);\n          ctx.y -= diff;\n          translateY.value = ctx.y + translationY;\n        }\n        if (translateY.value > upperBound) {\n          const diff = Math.min(\n            translateY.value - upperBound,\n            leftToScrollDown\n          );\n          scrollY.value += diff;\n          scrollTo(scrollView, 0, scrollY.value, false);\n          ctx.y += diff;\n          translateY.value = ctx.y + translationY;\n        }\n      }\n    },\n    onEnd: () => {\n      const newPosition = getPosition(config, positions.value[id]!);\n      translateX.value = withTiming(newPosition.x, animationConfig, () => {\n        isGestureActive.value = false;\n        runOnJS(onDragEnd)(positions.value);\n      });\n      translateY.value = withTiming(newPosition.y, animationConfig);\n    },\n  });\n  const style = useAnimatedStyle(() => {\n    const zIndex = isGestureActive.value ? 100 : 0;\n    const scale = withSpring(isGestureActive.value ? 1.05 : 1);\n    return {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: SIZE,\n      height: SIZE,\n      zIndex,\n      transform: [\n        { translateX: translateX.value },\n        { translateY: translateY.value },\n        { scale },\n      ],\n    };\n  });\n  return (\n    <Animated.View style={style}>\n      <PanGestureHandler enabled={editing} onGestureEvent={onGestureEvent}>\n        <Animated.View style={StyleSheet.absoluteFill}>\n          {children}\n        </Animated.View>\n      </PanGestureHandler>\n    </Animated.View>\n  );\n};\n\nexport default Item;\n"]}