{"version":3,"sources":["ConfigContext.tsx"],"names":["createContext","Dimensions","Easing","width","get","getPosition","config","order","x","COL","SIZE","y","Math","floor","getOrder","tx","ty","max","round","row","col","min","ConfigContext","MARGIN","animationConfig","easing","inOut","ease","duration"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAYF,UAAU,CAACG,GAAX,CAAe,QAAf,CAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAD,EAAcC,KAAd,KAAgC;AACzD;;AAEA,SAAO;AACLC,IAAAA,CAAC,EAAGD,KAAK,GAAGD,MAAM,CAACG,GAAhB,GAAuBH,MAAM,CAACI,IAD5B;AAELC,IAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAGD,MAAM,CAACG,GAA1B,IAAiCH,MAAM,CAACI;AAFtC,GAAP;AAID,CAPM;AASP,OAAO,MAAMI,QAAQ,GAAG,CAACR,MAAD,EAAcS,EAAd,EAA0BC,EAA1B,EAAsCC,GAAtC,KAAsD;AAC5E;;AAEA,QAAMT,CAAC,GAAGI,IAAI,CAACM,KAAL,CAAWH,EAAE,GAAGT,MAAM,CAACI,IAAvB,IAA+BJ,MAAM,CAACI,IAAhD;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACM,KAAL,CAAWF,EAAE,GAAGV,MAAM,CAACI,IAAvB,IAA+BJ,MAAM,CAACI,IAAhD;AACA,QAAMS,GAAG,GAAGP,IAAI,CAACK,GAAL,CAASN,CAAT,EAAY,CAAZ,IAAiBL,MAAM,CAACI,IAApC;AACA,QAAMU,GAAG,GAAGR,IAAI,CAACK,GAAL,CAAST,CAAT,EAAY,CAAZ,IAAiBF,MAAM,CAACI,IAApC;AACA,SAAOE,IAAI,CAACS,GAAL,CAASF,GAAG,GAAGb,MAAM,CAACG,GAAb,GAAmBW,GAA5B,EAAiCH,GAAjC,CAAP;AACD,CARM;AAUP,OAAO,MAAMK,aAAa,gBAAGtB,aAAa,CAAC;AACzCuB,EAAAA,MAAM,EAAE,CADiC;AAEzCd,EAAAA,GAAG,EAAE,CAFoC;AAGzCC,EAAAA,IAAI,EAAEP,KAAK,GAAG,CAAR,GAAY,CAHuB;AAIzCE,EAAAA,WAJyC;AAKzCS,EAAAA;AALyC,CAAD,CAAnC;AAYP,OAAO,MAAMU,eAAe,GAAG;AAC7BC,EAAAA,MAAM,EAAEvB,MAAM,CAACwB,KAAP,CAAaxB,MAAM,CAACyB,IAApB,CADqB;AAE7BC,EAAAA,QAAQ,EAAE;AAFmB,CAAxB","sourcesContent":["import { createContext } from 'react';\nimport { Dimensions } from 'react-native';\nimport { Easing } from 'react-native-reanimated';\n\nexport const { width } = Dimensions.get('window');\nexport const getPosition = (config: any, order: number) => {\n  'worklet';\n\n  return {\n    x: (order % config.COL) * config.SIZE,\n    y: Math.floor(order / config.COL) * config.SIZE,\n  };\n};\n\nexport const getOrder = (config: any, tx: number, ty: number, max: number) => {\n  'worklet';\n\n  const x = Math.round(tx / config.SIZE) * config.SIZE;\n  const y = Math.round(ty / config.SIZE) * config.SIZE;\n  const row = Math.max(y, 0) / config.SIZE;\n  const col = Math.max(x, 0) / config.SIZE;\n  return Math.min(row * config.COL + col, max);\n};\n\nexport const ConfigContext = createContext({\n  MARGIN: 8,\n  COL: 3,\n  SIZE: width / 4 - 8,\n  getPosition,\n  getOrder,\n});\n\nexport interface Positions {\n  [id: string]: number;\n}\n\nexport const animationConfig = {\n  easing: Easing.inOut(Easing.ease),\n  duration: 350,\n};\n"]}